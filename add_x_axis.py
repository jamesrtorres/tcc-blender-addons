bl_info = {
    "name": "Add X Axis",
    "author": "James Torres",
    "version": (1, 0),
    "blender": (2, 80, 0),
    "location": "View3D > Add > Mesh > New Object",
    "description": "Adds a new Mesh X Axis",
    "warning": "",
    "doc_url": "",
    "category": "Add Mesh",
}


import bpy
from bpy.types import Operator
from bpy.props import FloatVectorProperty
from bpy_extras.object_utils import AddObjectHelper, object_data_add
from mathutils import Vector


def add_object(self, context):
    scale_x = self.scale.x
    scale_y = self.scale.y
    scale_z = self.scale.z

    list_verts = [Vector((0.5046150088310242, 0.03653800114989281, 0.03653800114989281)), Vector((0.6507680416107178, 0.0, 0.0)), Vector((0.5046150088310242, 0.0730770006775856, 0.0730770006775856)), Vector((0.5046150088310242, -0.03653800114989281, 0.03653800114989281)), Vector((0.5046150088310242, -0.0730770006775856, 0.0730770006775856)), Vector((0.5046150088310242, 0.03653800114989281, -0.03653800114989281)), Vector((0.5046150088310242, -0.03653800114989281, -0.03653800114989281)), Vector((0.5046150088310242, -0.0730770006775856, -0.0730770006775856)), Vector((0.5046150088310242, 0.0730770006775856, -0.0730770006775856)), Vector((0.0003850013017654419, 0.0, 0.0)), Vector((0.7821532487869263, -0.1801692247390747, -0.09786669164896011)), Vector((0.7792733907699585, -0.17728941142559052, -0.09786669164896011)), Vector((0.7226943373680115, -0.1207103431224823, -0.006502160336822271)), Vector((0.6693254709243774, -0.06734143197536469, -0.09786669164896011)), Vector((0.6664806604385376, -0.06449665129184723, -0.09786669164896011)), Vector((0.7216969132423401, -0.11971290409564972, -0.003665831871330738)), Vector((0.6670911312103271, -0.06510715186595917, 0.0866333618760109)), Vector((0.6695137619972229, -0.06752978265285492, 0.0866333618760109)), Vector((0.7232155799865723, -0.12123160809278488, -0.0013039554469287395)), Vector((0.7748985886573792, -0.17291459441184998, 0.0866333618760109)), Vector((0.7782872915267944, -0.17630329728126526, 0.0866333618760109)), Vector((0.7245773077011108, -0.12259329855442047, -0.004104946739971638)), Vector((0.824579656124115, -0.137742817401886, -0.09786669164896011)), Vector((0.8216997981071472, -0.134863018989563, -0.09786669164896011)), Vector((0.7651207447052002, -0.07828394323587418, -0.0065021575428545475)), Vector((0.7117518186569214, -0.02491503208875656, -0.09786669164896011)), Vector((0.7089070677757263, -0.022070251405239105, -0.09786669164896011)), Vector((0.7641233205795288, -0.077286496758461, -0.0036658290773630142)), Vector((0.7095175385475159, -0.022680751979351044, 0.0866333618760109)), Vector((0.7119401693344116, -0.0251033753156662, 0.0866333618760109)), Vector((0.765641987323761, -0.07880520075559616, -0.0013039526529610157)), Vector((0.8173249959945679, -0.13048818707466125, 0.0866333618760109)), Vector((0.8207136988639832, -0.13387688994407654, 0.0866333618760109)), Vector((0.7670037150382996, -0.08016689121723175, -0.004104944411665201)), Vector((0.824579656124115, -0.137742817401886, -0.09786669164896011)), Vector((0.8334706425666809, -0.14801815152168274, -0.104047030210495)), Vector((0.8401070237159729, -0.1586720049381256, -0.10962239652872086)), Vector((0.8438391089439392, -0.16866150498390198, -0.11404703557491302)), Vector((0.8443016409873962, -0.17700877785682678, -0.11688782274723053)), Vector((0.8414493203163147, -0.18289676308631897, -0.11786668747663498)), Vector((0.8273071646690369, -0.1970389038324356, -0.11786668747663498)), Vector((0.8214191794395447, -0.19989123940467834, -0.11688782274723053)), Vector((0.8130719065666199, -0.1994287073612213, -0.11404703557491302)), Vector((0.8030824065208435, -0.19569659233093262, -0.10962239652872086)), Vector((0.7924285531044006, -0.189060240983963, -0.104047030210495)), Vector((0.7821532487869263, -0.1801692247390747, -0.09786669164896011)), Vector((0.8216997981071472, -0.134863018989563, -0.09786669164896011)), Vector((0.8190257549285889, -0.13357329368591309, -0.104047030210495)), Vector((0.8152291774749756, -0.1337941586971283, -0.10962239652872086)), Vector((0.8106815814971924, -0.13550397753715515, -0.11404703557491302)), Vector((0.8058282732963562, -0.13853538036346436, -0.11688782274723053)), Vector((0.8011441826820374, -0.14259164035320282, -0.11786669492721558)), Vector((0.7870020270347595, -0.15673378109931946, -0.11786669492721558)), Vector((0.7829458117485046, -0.16141784191131592, -0.11688782274723053)), Vector((0.779914379119873, -0.1662711799144745, -0.11404703557491302)), Vector((0.7782045602798462, -0.1708187460899353, -0.10962239652872086)), Vector((0.7779837250709534, -0.17461536824703217, -0.104047030210495)), Vector((0.7792733907699585, -0.17728941142559052, -0.09786669164896011)), Vector((0.7651207447052002, -0.07828394323587418, -0.0065021575428545475)), Vector((0.7645257711410522, -0.07907330989837646, -0.01603982225060463)), Vector((0.7626047134399414, -0.0811697393655777, -0.024643875658512115)), Vector((0.759545624256134, -0.0843680128455162, -0.0314720943570137)), Vector((0.7556479573249817, -0.08835507184267044, -0.03585607931017876)), Vector((0.7512931823730469, -0.09274062514305115, -0.03736669570207596)), Vector((0.737151026725769, -0.10688275843858719, -0.03736669570207596)), Vector((0.7327654957771301, -0.1112375259399414, -0.03585607931017876)), Vector((0.7287784218788147, -0.11513522267341614, -0.0314720943570137)), Vector((0.7255801558494568, -0.1181943267583847, -0.024643879383802414)), Vector((0.723483681678772, -0.12011538445949554, -0.016039825975894928)), Vector((0.7226943373680115, -0.1207103431224823, -0.006502160336822271)), Vector((0.7117518186569214, -0.02491503208875656, -0.09786669164896011)), Vector((0.7131180167198181, -0.027665510773658752, -0.104047030210495)), Vector((0.7129660844802856, -0.03153109550476074, -0.10962239652872086)), Vector((0.7113109827041626, -0.03613337129354477, -0.11404703557491302)), Vector((0.7083147168159485, -0.041021861135959625, -0.11688782274723053)), Vector((0.7042705416679382, -0.04571802541613579, -0.11786669492721558)), Vector((0.6901284456253052, -0.05986015871167183, -0.11786669492721558)), Vector((0.6854322552680969, -0.06390431523323059, -0.11688782274723053)), Vector((0.6805437803268433, -0.0669005811214447, -0.11404703557491302)), Vector((0.675941526889801, -0.06855568289756775, -0.10962239652872086)), Vector((0.6720759272575378, -0.06870758533477783, -0.104047030210495)), Vector((0.6693254709243774, -0.06734143197536469, -0.09786669164896011)), Vector((0.7089070677757263, -0.022070251405239105, -0.09786669164896011)), Vector((0.6989158391952515, -0.01346336305141449, -0.104047030210495)), Vector((0.6885182857513428, -0.007083311676979065, -0.10962239652872086)), Vector((0.6787322163581848, -0.003554604947566986, -0.11404702812433243)), Vector((0.6705155372619629, -0.0032226741313934326, -0.11688782274723053)), Vector((0.6646725535392761, -0.006120011210441589, -0.11786669492721558)), Vector((0.6505303978919983, -0.020262151956558228, -0.11786669492721558)), Vector((0.6476330757141113, -0.026105135679244995, -0.11688782274723053)), Vector((0.6479650139808655, -0.034321822226047516, -0.11404702812433243)), Vector((0.6514937281608582, -0.04410789906978607, -0.10962239652872086)), Vector((0.6578737497329712, -0.05450543761253357, -0.104047030210495)), Vector((0.6664806604385376, -0.06449665129184723, -0.09786669164896011)), Vector((0.7641233205795288, -0.077286496758461, -0.0036658290773630142)), Vector((0.7577183246612549, -0.0722658634185791, -0.0037278905510902405)), Vector((0.7505559921264648, -0.06912101060152054, -0.00378387700766325)), Vector((0.7433373928070068, -0.0681597888469696, -0.0038283083122223616)), Vector((0.7367691397666931, -0.06947627663612366, -0.0038568349555134773)), Vector((0.731494128704071, -0.0729416161775589, -0.0038666648324579)), Vector((0.717352032661438, -0.08708375692367554, -0.0038666657637804747)), Vector((0.7138866782188416, -0.09235873073339462, -0.0038568363524973392)), Vector((0.7125701904296875, -0.09892699867486954, -0.003828310174867511)), Vector((0.7135314345359802, -0.10614559799432755, -0.0037838793359696865)), Vector((0.7166762351989746, -0.11330793797969818, -0.0037278931122273207)), Vector((0.7216969132423401, -0.11971290409564972, -0.003665831871330738)), Vector((0.7095175385475159, -0.022680751979351044, 0.0866333618760109)), Vector((0.6993376612663269, -0.01388520747423172, 0.09281370043754578)), Vector((0.6887699365615845, -0.007334962487220764, 0.09838906675577164)), Vector((0.6788488030433655, -0.003671199083328247, 0.10281369835138321)), Vector((0.6705453991889954, -0.003252550959587097, 0.10565449297428131)), Vector((0.6646725535392761, -0.006120011210441589, 0.10663336515426636)), Vector((0.6505303978919983, -0.020262151956558228, 0.10663336515426636)), Vector((0.6476629376411438, -0.02613501250743866, 0.10565449297428131)), Vector((0.6480816006660461, -0.03443841636180878, 0.10281369835138321)), Vector((0.6517453789710999, -0.04435954988002777, 0.09838906675577164)), Vector((0.6582956314086914, -0.0549272820353508, 0.09281370043754578)), Vector((0.6670911312103271, -0.06510715186595917, 0.0866333618760109)), Vector((0.7119401693344116, -0.0251033753156662, 0.0866333618760109)), Vector((0.7132481336593628, -0.027795657515525818, 0.09281370043754578)), Vector((0.7130436897277832, -0.031608738005161285, 0.09838906675577164)), Vector((0.7113469839096069, -0.036169350147247314, 0.1028137058019638)), Vector((0.7083239555358887, -0.041031088680028915, 0.10565449297428131)), Vector((0.7042705416679382, -0.045718032866716385, 0.10663336515426636)), Vector((0.6901284456253052, -0.059860166162252426, 0.10663336515426636)), Vector((0.6854414939880371, -0.06391353905200958, 0.10565449297428131)), Vector((0.6805797219276428, -0.06693656742572784, 0.1028137058019638)), Vector((0.6760191321372986, -0.06863332539796829, 0.09838906675577164)), Vector((0.6722060441970825, -0.0688377320766449, 0.09281370043754578)), Vector((0.6695137619972229, -0.06752978265285492, 0.0866333618760109)), Vector((0.765641987323761, -0.07880520075559616, -0.0013039526529610157)), Vector((0.7648859620094299, -0.07943348586559296, 0.00825620349496603)), Vector((0.7628195881843567, -0.08138460665941238, 0.016880547627806664)), Vector((0.7596451640129089, -0.0844675675034523, 0.023724865168333054)), Vector((0.7556734085083008, -0.08838058263063431, 0.02811918780207634)), Vector((0.7512931823730469, -0.09274062514305115, 0.02963336557149887)), Vector((0.737151026725769, -0.10688275843858719, 0.02963336557149887)), Vector((0.732791006565094, -0.11126303672790527, 0.02811918780207634)), Vector((0.7288779616355896, -0.11523477733135223, 0.023724861443042755)), Vector((0.7257950305938721, -0.11840920150279999, 0.016880543902516365)), Vector((0.7238438725471497, -0.12047556042671204, 0.008256201632320881)), Vector((0.7232155799865723, -0.12123160809278488, -0.0013039554469287395)), Vector((0.8173249959945679, -0.13048818707466125, 0.0866333618760109)), Vector((0.8145825266838074, -0.1291300654411316, 0.09281370043754578)), Vector((0.8107241988182068, -0.12928922474384308, 0.09838906675577164)), Vector((0.806127667427063, -0.13095006346702576, 0.10281369835138321)), Vector((0.8012428879737854, -0.13395003974437714, 0.10565449297428131)), Vector((0.7965480089187622, -0.13799546658992767, 0.10663336515426636)), Vector((0.7824058532714844, -0.1521376073360443, 0.10663336515426636)), Vector((0.7783604264259338, -0.1568324863910675, 0.10565449297428131)), Vector((0.7753604650497437, -0.1617172807455063, 0.10281369835138321)), Vector((0.7736996412277222, -0.16631381213665009, 0.09838906675577164)), Vector((0.7735404372215271, -0.17017214000225067, 0.09281370043754578)), Vector((0.7748985886573792, -0.17291459441184998, 0.0866333618760109)), Vector((0.8207136988639832, -0.13387688994407654, 0.0866333618760109)), Vector((0.8293790221214294, -0.14392656087875366, 0.09281370043754578)), Vector((0.8358118534088135, -0.15437684953212738, 0.09838906675577164)), Vector((0.8393824100494385, -0.16420477628707886, 0.1028137058019638)), Vector((0.8397411704063416, -0.17244833707809448, 0.10565449297428131)), Vector((0.8368531465530396, -0.17830057442188263, 0.10663336515426636)), Vector((0.8227109909057617, -0.19244271516799927, 0.10663336515426636)), Vector((0.81685870885849, -0.19533079862594604, 0.10565449297428131)), Vector((0.8086152076721191, -0.1949719935655594, 0.1028137058019638)), Vector((0.7987872362136841, -0.1914014369249344, 0.09838906675577164)), Vector((0.788336992263794, -0.18496865034103394, 0.09281370043754578)), Vector((0.7782872915267944, -0.17630329728126526, 0.0866333618760109)), Vector((0.7670037150382996, -0.08016689121723175, -0.004104944411665201)), Vector((0.7720543742179871, -0.08660188317298889, -0.004031311720609665)), Vector((0.7752262949943542, -0.09379129856824875, -0.003964886534959078)), Vector((0.7762089967727661, -0.10103139281272888, -0.003912171348929405)), Vector((0.7749063372612, -0.1076134592294693, -0.0038783263880759478)), Vector((0.7714457511901855, -0.11289318650960922, -0.0038666643667966127)), Vector((0.7573035955429077, -0.12703531980514526, -0.0038666652981191874)), Vector((0.7520238757133484, -0.13049590587615967, -0.0038783277850598097)), Vector((0.7454417943954468, -0.13179859519004822, -0.0039121732115745544)), Vector((0.7382016777992249, -0.13081589341163635, -0.003964888863265514)), Vector((0.7310122847557068, -0.12764395773410797, -0.0040313140489161015)), Vector((0.7245773077011108, -0.12259329855442047, -0.004104946739971638))]
    
    verts = []
    for n in range(len(list_verts)):
        verts.append(((list_verts[n][0] * scale_x, list_verts[n][1] * scale_y, list_verts[n][2] * scale_z)))
    

    edges = []
    faces = [[2, 8, 5, 0], [4, 2, 0, 3], [9, 0, 5], [9, 3, 0], [9, 5, 6], [9, 6, 3], [7, 8, 1], [4, 7, 1], [2, 4, 1], [8, 2, 1], [7, 4, 3, 6], [8, 7, 6, 5], [15, 17, 16], [15, 18, 17], [18, 20, 19], [18, 21, 20], [15, 21, 18], [14, 12, 15], [12, 21, 15], [12, 10, 21], [14, 13, 12], [11, 10, 12], [27, 28, 29], [27, 29, 30], [30, 31, 32], [30, 32, 33], [27, 30, 33], [26, 27, 24], [24, 27, 33], [24, 33, 22], [26, 24, 25], [23, 24, 22], [35, 47, 46, 34], [36, 48, 47, 35], [37, 49, 48, 36], [38, 50, 49, 37], [39, 51, 50, 38], [40, 52, 51, 39], [41, 53, 52, 40], [42, 54, 53, 41], [43, 55, 54, 42], [44, 56, 55, 43], [45, 57, 56, 44], [47, 59, 58, 46], [48, 60, 59, 47], [49, 61, 60, 48], [50, 62, 61, 49], [51, 63, 62, 50], [52, 64, 63, 51], [53, 65, 64, 52], [54, 66, 65, 53], [55, 67, 66, 54], [56, 68, 67, 55], [57, 69, 68, 56], [59, 71, 70, 58], [60, 72, 71, 59], [61, 73, 72, 60], [62, 74, 73, 61], [63, 75, 74, 62], [64, 76, 75, 63], [65, 77, 76, 64], [66, 78, 77, 65], [67, 79, 78, 66], [68, 80, 79, 67], [69, 81, 80, 68], [71, 83, 82, 70], [72, 84, 83, 71], [73, 85, 84, 72], [74, 86, 85, 73], [75, 87, 86, 74], [76, 88, 87, 75], [77, 89, 88, 76], [78, 90, 89, 77], [79, 91, 90, 78], [80, 92, 91, 79], [81, 93, 92, 80], [83, 95, 94, 82], [84, 96, 95, 83], [85, 97, 96, 84], [86, 98, 97, 85], [87, 99, 98, 86], [88, 100, 99, 87], [89, 101, 100, 88], [90, 102, 101, 89], [91, 103, 102, 90], [92, 104, 103, 91], [93, 105, 104, 92], [95, 107, 106, 94], [96, 108, 107, 95], [97, 109, 108, 96], [98, 110, 109, 97], [99, 111, 110, 98], [100, 112, 111, 99], [101, 113, 112, 100], [102, 114, 113, 101], [103, 115, 114, 102], [104, 116, 115, 103], [105, 117, 116, 104], [107, 119, 118, 106], [108, 120, 119, 107], [109, 121, 120, 108], [110, 122, 121, 109], [111, 123, 122, 110], [112, 124, 123, 111], [113, 125, 124, 112], [114, 126, 125, 113], [115, 127, 126, 114], [116, 128, 127, 115], [117, 129, 128, 116], [119, 131, 130, 118], [120, 132, 131, 119], [121, 133, 132, 120], [122, 134, 133, 121], [123, 135, 134, 122], [124, 136, 135, 123], [125, 137, 136, 124], [126, 138, 137, 125], [127, 139, 138, 126], [128, 140, 139, 127], [129, 141, 140, 128], [131, 143, 142, 130], [132, 144, 143, 131], [133, 145, 144, 132], [134, 146, 145, 133], [135, 147, 146, 134], [136, 148, 147, 135], [137, 149, 148, 136], [138, 150, 149, 137], [139, 151, 150, 138], [140, 152, 151, 139], [141, 153, 152, 140], [143, 155, 154, 142], [144, 156, 155, 143], [145, 157, 156, 144], [146, 158, 157, 145], [147, 159, 158, 146], [148, 160, 159, 147], [149, 161, 160, 148], [150, 162, 161, 149], [151, 163, 162, 150], [152, 164, 163, 151], [153, 165, 164, 152], [155, 167, 166, 154], [156, 168, 167, 155], [157, 169, 168, 156], [158, 170, 169, 157], [159, 171, 170, 158], [160, 172, 171, 159], [161, 173, 172, 160], [162, 174, 173, 161], [163, 175, 174, 162], [164, 176, 175, 163], [165, 177, 176, 164], [167, 35, 34, 166], [168, 36, 35, 167], [169, 37, 36, 168], [170, 38, 37, 169], [171, 39, 38, 170], [172, 40, 39, 171], [173, 41, 40, 172], [174, 42, 41, 173], [175, 43, 42, 174], [176, 44, 43, 175], [177, 45, 44, 176]]
    mesh = bpy.data.meshes.new(name="New Object Mesh")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


class OBJECT_OT_add_object(Operator, AddObjectHelper):
    """Create a new Mesh Object"""
    bl_idname = "mesh.add_x_axis"
    bl_label = "Add X Axis Mesh Object"
    bl_options = {'REGISTER', 'UNDO'}

    scale: FloatVectorProperty(
        name="Scale",
        default=(1.0, 1.0, 1.0),
        subtype='TRANSLATION',
        description="scaling",
    )

    def execute(self, context):

        add_object(self, context)

        return {'FINISHED'}


# Registration

def add_object_button(self, context):
    self.layout.operator(
        OBJECT_OT_add_object.bl_idname,
        text="Add X Axis",
        icon='INDIRECT_ONLY_OFF')


# This allows you to right click on a button and link to documentation
def add_object_manual_map():
    url_manual_prefix = "https://docs.blender.org/manual/en/latest/"
    url_manual_mapping = (
        ("bpy.ops.mesh.add_object", "scene_layout/object/types.html"),
    )
    return url_manual_prefix, url_manual_mapping


def register():
    bpy.utils.register_class(OBJECT_OT_add_object)
    bpy.utils.register_manual_map(add_object_manual_map)
    bpy.types.VIEW3D_MT_mesh_add.append(add_object_button)


def unregister():
    bpy.utils.unregister_class(OBJECT_OT_add_object)
    bpy.utils.unregister_manual_map(add_object_manual_map)
    bpy.types.VIEW3D_MT_mesh_add.remove(add_object_button)


if __name__ == "__main__":
    register()
